import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

import math

Dataset = "Hefei_214"


if Dataset == "Jinan":
    Row_Num = 3
    Column_Num = 4
    Position = [[117.089899,36.700593], [117.099241,36.701577], [117.104775,36.702155],
                [117.090977,36.694632], [117.098882,36.695847], [117.103266,36.696715],
                [117.091767,36.690696], [117.099385,36.690928], [117.103481,36.691449],
                [117.092486,36.687108], [117.099457,36.687339], [117.103553,36.687455]]

elif Dataset == "Hangzhou":
    Row_Num = 4
    Column_Num = 4
    Position = [[120.104438,30.301158], [120.11299,30.299942], [120.124956,30.300254], [120.135017,30.300893],
                [120.105242,30.2927], [120.114261,30.293168], [120.125472,30.293979], [120.135408,30.2944],
                [120.106186,30.287835], [120.115654,30.288225], [120.125859,30.288599], [120.135857,30.289044],
                [120.107277,30.282097], [120.11741,30.282549], [120.126384,30.282713], [120.136355,30.283189]]

elif Dataset == "Newyork":
    Row_Num = 28
    Column_Num = 7
    Position = [[-73.969569,40.766101], [-73.969111,40.766695], [-73.968662,40.767378], [-73.968213,40.767972], [-73.967764,40.768601], [-73.967288,40.769222], [-73.966848,40.769857], [-73.966362,40.770465], [-73.965922,40.7711], [-73.96541,40.771776], [-73.964943,40.772446], [-73.964467,40.773101], [-73.963991,40.773743], [-73.963569,40.774378], [-73.963084,40.774996], [-73.962635,40.775621], [-73.962136,40.776314], [-73.961624,40.777004], [-73.961157,40.777646], [-73.960681,40.778261], [-73.96025,40.778916], [-73.959755,40.779545], [-73.959306,40.780173], [-73.958821,40.780869], [-73.958332,40.781539], [-73.957873,40.78218], [-73.957415,40.782816], [-73.956966,40.783416],
                [-73.968006,40.765431], [-73.967521,40.76606], [-73.96709,40.766695], [-73.966641,40.76731], [-73.966138,40.767911], [-73.965707,40.768546], [-73.96524,40.769161], [-73.964781,40.769796], [-73.964332,40.770431], [-73.963838,40.771107], [-73.963344,40.771824], [-73.962877,40.772446], [-73.96241,40.77306], [-73.961952,40.773675], [-73.961431,40.77431], [-73.961053,40.774966], [-73.960483,40.775645], [-73.959989,40.776321], [-73.959531,40.776963], [-73.959091,40.777612], [-73.958624,40.77822], [-73.95821,40.778875], [-73.957716,40.77951], [-73.957204,40.780186], [-73.956697,40.780842], [-73.956283,40.781511], [-73.95578,40.782105], [-73.955385,40.782761],
                [-73.966345,40.764728], [-73.965895,40.765349], [-73.965428,40.765991], [-73.96497,40.766606], [-73.964494,40.767228], [-73.964063,40.767877], [-73.963596,40.768471], [-73.963138,40.769113], [-73.962706,40.769727], [-73.962194,40.77041], [-73.961709,40.771093], [-73.961242,40.771729], [-73.960775,40.772364], [-73.960317,40.773006], [-73.959886,40.773641], [-73.959419,40.774283], [-73.958902,40.774955], [-73.958417,40.775645], [-73.957968,40.776294], [-73.957474,40.776909], [-73.957043,40.777557], [-73.95654,40.778186], [-73.956108,40.778828], [-73.955614,40.779538], [-73.955071,40.780173], [-73.954631,40.780815], [-73.954217,40.781436], [-73.953732,40.782051],
                [-73.964728,40.764031], [-73.964269,40.76466], [-73.963829,40.765308], [-73.963371,40.765923], [-73.962931,40.766552], [-73.962509,40.767194], [-73.962006,40.767808], [-73.961592,40.768423], [-73.961116,40.769051], [-73.960604,40.769755], [-73.96011,40.770424], [-73.959616,40.771046], [-73.959176,40.771694], [-73.958709,40.772323], [-73.958233,40.772937], [-73.957811,40.7736], [-73.957285,40.774286], [-73.956791,40.774969], [-73.956333,40.775604], [-73.955866,40.776253], [-73.955408,40.776868], [-73.954967,40.777503], [-73.954464,40.778124], [-73.953988,40.778841], [-73.953508,40.779497], [-73.95305,40.780146], [-73.952565,40.780753], [-73.952133,40.781382],
                [-73.962518,40.763109], [-73.96206,40.76371], [-73.961583,40.764352], [-73.961161,40.765001], [-73.960694,40.765616], [-73.960218,40.76623], [-73.959751,40.766866], [-73.959315,40.767484], [-73.958871,40.768129], [-73.958368,40.768819], [-73.957865,40.769461], [-73.957397,40.770137], [-73.95693,40.770745], [-73.956463,40.771394], [-73.955996,40.772029], [-73.955565,40.772657], [-73.955066,40.77333], [-73.954545,40.77402], [-73.954069,40.774655], [-73.95362,40.775283], [-73.953162,40.775918], [-73.952686,40.776554], [-73.952228,40.777189], [-73.951761,40.777906], [-73.95128,40.778561], [-73.950795,40.779183], [-73.950337,40.779784], [-73.949906,40.780425],
                [-73.960173,40.762098], [-73.959688,40.762727], [-73.959239,40.763389], [-73.958808,40.764004], [-73.958332,40.764632], [-73.957882,40.76524], [-73.957415,40.765882], [-73.956948,40.766497], [-73.956463,40.767132], [-73.955987,40.767795], [-73.955511,40.768484], [-73.955017,40.769113], [-73.954586,40.769741], [-73.95411,40.77039], [-73.953633,40.771011], [-73.953184,40.771667], [-73.952686,40.772347], [-73.952147,40.773002], [-73.951698,40.773637], [-73.951248,40.774293], [-73.950772,40.774921], [-73.95035,40.775577], [-73.949883,40.776198], [-73.949398,40.776881], [-73.948881,40.777571], [-73.948423,40.778199], [-73.947947,40.778814], [-73.947498,40.779428],
                [-73.957873,40.761135], [-73.957424,40.761798], [-73.956975,40.762426], [-73.956535,40.763054], [-73.956077,40.763659], [-73.955637,40.76427], [-73.95517,40.764919], [-73.954702,40.765544], [-73.954271,40.766155], [-73.95375,40.766873], [-73.953265,40.767501], [-73.952798,40.76817], [-73.952322,40.768805], [-73.951864,40.769434], [-73.951379,40.770072], [-73.950948,40.770704], [-73.950431,40.771377], [-73.949928,40.772073], [-73.94947,40.772702], [-73.94903,40.773351], [-73.948554,40.773958], [-73.948104,40.7746], [-73.947628,40.775242], [-73.947134,40.775925], [-73.946595,40.776601], [-73.946169,40.77723], [-73.945666,40.777844], [-73.94527,40.778472]]

elif Dataset == "Hefei":
    Position = [[117.27720300,31.83481000], [117.28000500,31.83826100], [117.27959200,31.84783100], [117.28586200,31.83399700],
                [117.28600600,31.83807700], [117.28783800,31.84485600], [117.28765900,31.84783100], [117.29153900,31.83396600],
                [117.29164700,31.83801500], [117.29197100,31.84510100], [117.29218600,31.84789200]]

elif Dataset == "Hefei_214":
    position_file = open("./data/Hefei_214/hefei_xy.csv", encoding="utf-8-sig")
    Position = []
    for line in position_file:
        print(line)
        codes = line.split(",")
        print(codes)
        position = [int(codes[0]), int(codes[1].split("\n")[0])]
        Position.append(position)

if Dataset != "Hefei" and Dataset != "Hefei_214":
    Intersaction_Num = Row_Num * Column_Num
elif Dataset == "Hefei":
    Intersaction_Num = 11
else:
    Intersaction_Num = 214


volume_data = []
combined = []
vars = []


def read_dataset():
    file_index = "./data/" + Dataset + "/flow/vehicle_inter_"
    for intersaction in range(Intersaction_Num):
        file_name = file_index + str(intersaction) + ".csv"
        volume = calculate_file(file_name)
        volume_data.append(volume)
    print(volume_data)


def calculate_file(file_name):
    file = open(file_name, "r")
    next(file)
    counter = 0
    for row in file:
        counter += 1
    return int(counter * 2.5)


def calculate_5min(file_name):
    file = open(file_name, "r")
    next(file)
    volume_5min = [0] * 12
    for row in file:
        enter_time = row.split(",")[1]
        time_slot = int(float(enter_time)) // 300
        # print("Enter Time: ", enter_time,"  Time Slot: ", time_slot)
        if time_slot != 12:
            volume_5min[time_slot] += 1

    print(volume_5min)
    return volume_5min


def combine_data():
    for intersaction in range(Intersaction_Num):
        record = Position[intersaction]
        record.append(volume_data[intersaction])
        combined.append(record)
    print(combined)


def read_5min():
    file_index = "./data/" + Dataset + "/flow/vehicle_inter_"
    for intersaction in range(Intersaction_Num):
        file_name = file_index + str(intersaction) + ".csv"
        volume = calculate_5min(file_name)
        variance = np.var(volume)
        vars.append(variance)
    write()

def write():
    file = open("vars_"+Dataset+".csv", "w")
    content = ""
    for i in range(Intersaction_Num):
        content += str(volume_data[i]) + "," + str(vars[i]) + "\n"

    file.writelines(content)





read_dataset()
combine_data()

# read_5min()

